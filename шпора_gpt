–û—Ç–ª–∏—á–Ω–æ, –Ω–∞—á–Ω—ë–º —Å –ú–æ–¥—É–ª—è ‚Ññ1: –ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã. –ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Windows Forms –∏ MySQL Server.

‚∏ª

üß© –ú–æ–¥—É–ª—å ‚Ññ1: –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

üìå –û–ø–∏—Å–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (MySQL)

–¢–∞–±–ª–∏—Ü—ã:

-- –ì—Ä—É–ø–ø—ã
CREATE TABLE Groups (
    GroupID INT PRIMARY KEY AUTO_INCREMENT,
    GroupName VARCHAR(50) NOT NULL
);

-- –°—Ç—É–¥–µ–Ω—Ç—ã
CREATE TABLE Students (
    StudentID INT PRIMARY KEY AUTO_INCREMENT,
    FullName VARCHAR(100),
    GroupID INT,
    FOREIGN KEY (GroupID) REFERENCES Groups(GroupID)
);

-- –î–∏—Å—Ü–∏–ø–ª–∏–Ω—ã
CREATE TABLE Subjects (
    SubjectID INT PRIMARY KEY AUTO_INCREMENT,
    SubjectName VARCHAR(100),
    TeacherID INT
);

-- –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏
CREATE TABLE Teachers (
    TeacherID INT PRIMARY KEY AUTO_INCREMENT,
    FullName VARCHAR(100)
);

-- –û—Ü–µ–Ω–∫–∏
CREATE TABLE Grades (
    GradeID INT PRIMARY KEY AUTO_INCREMENT,
    StudentID INT,
    SubjectID INT,
    GradeValue INT,
    DateSet DATE,
    IsDeleted BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID),
    FOREIGN KEY (SubjectID) REFERENCES Subjects(SubjectID)
);

–ü—Ä–∏–º–µ—Ä —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:

INSERT INTO Groups (GroupName) VALUES ('–ü–ò-301'), ('–ü–ò-302');

INSERT INTO Students (FullName, GroupID) VALUES 
('–ò–≤–∞–Ω–æ–≤ –ò.–ò.', 1), 
('–ü–µ—Ç—Ä–æ–≤ –ü.–ü.', 1), 
('–°–∏–¥–æ—Ä–æ–≤ –°.–°.', 2);

INSERT INTO Teachers (FullName) VALUES ('–°–º–∏—Ä–Ω–æ–≤ –ê.–ê.'), ('–ö—É–∑–Ω–µ—Ü–æ–≤ –ë.–ë.');

INSERT INTO Subjects (SubjectName, TeacherID) VALUES 
('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', 1), 
('–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', 2);

INSERT INTO Grades (StudentID, SubjectID, GradeValue, DateSet) VALUES
(1, 1, 4, CURDATE()),
(1, 2, 5, CURDATE()),
(2, 1, 3, CURDATE());


‚∏ª

üñ•Ô∏è –†–µ–∞–ª–∏–∑–∞—Ü–∏—è Windows Forms (Visual Studio)

–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:
	‚Ä¢	–§–æ—Ä–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
	‚Ä¢	–§–æ—Ä–º–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
	‚Ä¢	–§–æ—Ä–º–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞
	‚Ä¢	–ö–ª–∞—Å—Å—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î (MySQLConnector.cs, Models.cs)

–ü—Ä–∏–º–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î

// MySQLConnector.cs
using MySql.Data.MySqlClient;

public static class DB
{
    private static string connStr = "server=localhost;user=root;password=1234;database=edu_db;";
    public static MySqlConnection GetConnection() => new MySqlConnection(connStr);
}

–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (—É—á—ë—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞)

// LoginForm.cs
private void btnLogin_Click(object sender, EventArgs e)
{
    string login = txtLogin.Text;
    string role = cmbRole.SelectedItem.ToString(); // "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å" –∏–ª–∏ "–°—Ç—É–¥–µ–Ω—Ç"

    MySqlConnection conn = DB.GetConnection();
    conn.Open();

    string query = role == "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å"
        ? "SELECT * FROM Teachers WHERE FullName = @login"
        : "SELECT * FROM Students WHERE FullName = @login";

    MySqlCommand cmd = new MySqlCommand(query, conn);
    cmd.Parameters.AddWithValue("@login", login);

    var reader = cmd.ExecuteReader();
    if (reader.Read())
    {
        int userId = Convert.ToInt32(reader[0]);
        this.Hide();

        if (role == "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å")
            new TeacherForm(userId).Show();
        else
            new StudentForm(userId).Show();
    }
    else
    {
        MessageBox.Show("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    }

    conn.Close();
}

–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: –ü—Ä–æ—Å–º–æ—Ç—Ä –∏ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫

// TeacherForm.cs
private void LoadSubjects()
{
    string query = "SELECT * FROM Subjects WHERE TeacherID = @id";
    // –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ ListBox/ComboBox –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
}

private void btnSetGrade_Click(object sender, EventArgs e)
{
    string query = "REPLACE INTO Grades (StudentID, SubjectID, GradeValue, DateSet) VALUES (@sid, @subid, @grade, CURDATE())";
    // –≤—Å—Ç–∞–≤–∫–∞/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏
}

–°—Ç—É–¥–µ–Ω—Ç: –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ü–µ–Ω–æ–∫

// StudentForm.cs
private void LoadMyGrades()
{
    string query = @"
        SELECT s.SubjectName, g.GradeValue, g.DateSet 
        FROM Grades g 
        JOIN Subjects s ON g.SubjectID = s.SubjectID
        WHERE g.StudentID = @id AND g.IsDeleted = 0";
    // –≤—ã–≤–æ–¥ –≤ datagrifview


–û—Ç–ª–∏—á–Ω–æ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ú–æ–¥—É–ª—é ‚Ññ2: –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

‚∏ª

üìò –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–æ–∫

‚∏ª

üî∑ 1. –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–¥—Å–∏—Å—Ç–µ–º—ã

–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ü–µ–Ω–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏. –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–æ—â–∞–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—å —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –∏ –æ–±—É—á–∞—é—â–∏–º—Å—è.

‚∏ª

üî∑ 2. –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
	1.	–û—Ç–∫—Ä–æ–π—Ç–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (GradesApp.exe) –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –∏–∑ Visual Studio.
	2.	–ù–∞ —ç–∫—Ä–∞–Ω–µ –ø–æ—è–≤–∏—Ç—Å—è —Ñ–æ—Ä–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:

üñºÔ∏è –°–∫—Ä–∏–Ω—à–æ—Ç 1 ‚Äî –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞

‚∏ª

üî∑ 3. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è

–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É:
	1.	–í–≤–µ–¥–∏—Ç–µ –§–ò–û —Ç–æ—á–Ω–æ –∫–∞–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò.–ò.).
	2.	–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞:
	‚Ä¢	–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
	‚Ä¢	–°—Ç—É–¥–µ–Ω—Ç
	3.	–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ‚Äú–í–æ–π—Ç–∏‚Äù.

üñºÔ∏è –°–∫—Ä–∏–Ω—à–æ—Ç 2 ‚Äî –ü—Ä–∏–º–µ—Ä –≤—Ö–æ–¥–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è

‚∏ª

üî∑ 4. –†–∞–±–æ—Ç–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è

4.1 –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∏—Å—Ü–∏–ø–ª–∏–Ω

–ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –≤–µ–¥–µ—Ç.

üñºÔ∏è –°–∫—Ä–∏–Ω—à–æ—Ç 3 ‚Äî –î–∏—Å—Ü–∏–ø–ª–∏–Ω—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è

‚∏ª

4.2 –í—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ/–∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫
	1.	–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É.
	2.	–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏ —Å—Ç—É–¥–µ–Ω—Ç–∞.
	3.	–£–∫–∞–∂–∏—Ç–µ –æ—Ü–µ–Ω–∫—É (–æ—Ç 2 –¥–æ 5).
	4.	–ù–∞–∂–º–∏—Ç–µ ‚Äú–í—ã—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É‚Äù.
	5.	–ï—Å–ª–∏ –ø–æ–ª–µ —Å –æ—Ü–µ–Ω–∫–æ–π –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º ‚Äî –æ—Ü–µ–Ω–∫–∞ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞ (–º—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ).

üñºÔ∏è –°–∫—Ä–∏–Ω—à–æ—Ç 4 ‚Äî –û–∫–Ω–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏

‚∏ª

4.3 –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ü–µ–Ω–æ–∫ –ø–æ —Å—Ç—É–¥–µ–Ω—Ç—É –∏–ª–∏ –ø–æ –≥—Ä—É–ø–ø–µ
	‚Ä¢	–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ–≥–æ –æ—Ü–µ–Ω–∫–∏.
	‚Ä¢	–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –æ—Ü–µ–Ω–∫–∏ –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ.

üñºÔ∏è –°–∫—Ä–∏–Ω—à–æ—Ç 5 ‚Äî –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ü–µ–Ω–æ–∫ –≥—Ä—É–ø–ø—ã

‚∏ª

üî∑ 5. –†–∞–±–æ—Ç–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞

–ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ —Å—Ç—É–¥–µ–Ω—Ç —Å—Ä–∞–∑—É –≤–∏–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —Å–≤–æ–∏—Ö –æ—Ü–µ–Ω–æ–∫ –ø–æ –≤—Å–µ–º –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º.

üñºÔ∏è –°–∫—Ä–∏–Ω—à–æ—Ç 6 ‚Äî –û–∫–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –æ—Ü–µ–Ω–∫–∞–º–∏

‚∏ª

üî∑ 6. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
	‚Ä¢	–£–¥–∞–ª—ë–Ω–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏ –Ω–µ –∏—Å—á–µ–∑–∞—é—Ç –∏–∑ –±–∞–∑—ã: –ø–æ–ª–µ IsDeleted –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è.
	‚Ä¢	–í –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ (—Ä–∞—Å—à–∏—Ä—è–µ–º–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞).

‚∏ª

üî∑ 7. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–µ–Ω—é –∏ —Ñ—É–Ω–∫—Ü–∏–π

–≠–ª–µ–º–µ–Ω—Ç	–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
–í—Ö–æ–¥	–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ –§–ò–û –∏ —Ä–æ–ª–∏
–û—Ü–µ–Ω–∫–∏ (–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å)	–ü—Ä–æ—Å–º–æ—Ç—Ä, –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ
–û—Ü–µ–Ω–∫–∏ (–°—Ç—É–¥–µ–Ω—Ç)	–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–≤–æ–∏—Ö –æ—Ü–µ–Ω–æ–∫
–í—ã—Ö–æ–¥	–ó–∞–∫—Ä—ã—Ç–∏–µ —Ç–µ–∫—É—â–µ–π —Ñ–æ—Ä–º—ã –∏ –≤–æ–∑–≤—Ä–∞—Ç –∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏


‚∏ª

üî∑ 8. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã

–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ ‚Äú–í—ã—Ö–æ–¥‚Äù –≤ –ª—é–±–æ–π —Ñ–æ—Ä–º–µ.

‚∏ª

üìé –ü—Ä–∏–º–µ—á–∞–Ω–∏—è:
	‚Ä¢	–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
	‚Ä¢	–°—Ç—É–¥–µ–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ü–µ–Ω–∫–∏.



–û—Ç–ª–∏—á–Ω–æ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ú–æ–¥—É–ª—é ‚Ññ3: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ ‚Äî –≤ –Ω—ë–º –Ω—É–∂–Ω–æ:
	1.	–î–æ–±–∞–≤–∏—Ç—å 10 –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü—ã –∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.
	2.	–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥, –æ—Ç–æ–±—Ä–∞–∂–∞—é—â–∏–π:
	‚Ä¢	—É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤;
	‚Ä¢	—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ –≥—Ä—É–ø–ø–∞–º –∏ —Å—Ç—É–¥–µ–Ω—Ç–∞–º;
	‚Ä¢	—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é —Å –≤–∑–∞–∏–º–Ω—ã–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –≥—Ä–∞—Ñ–∏–∫–æ–≤;
	3.	–û–ø–∏—Å–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é (—á—Ç–æ –∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç).

‚∏ª

üóÉÔ∏è 1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π

–ü—Ä–∏–º–µ—Ä: 10 —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å –§–ò–û, –≤–∑—è—Ç—ã–º–∏ –∏–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ (—Å–ª—É—á–∞–π–Ω—ã–µ –∏–º–µ–Ω–∞).

INSERT INTO Students (FullName, GroupID) VALUES
('–ê–ª–µ–∫—Å–µ–µ–≤ –†–æ–º–∞–Ω', 1),
('–ù–æ–≤–∏–∫–æ–≤–∞ –ê–Ω–∞—Å—Ç–∞—Å–∏—è', 1),
('–ü–æ–ø–æ–≤ –î–∞–Ω–∏–∏–ª', 1),
('–õ–µ–±–µ–¥–µ–≤–∞ –°–æ—Ñ—å—è', 2),
('–ö–æ–∑–ª–æ–≤ –ê—Ä—Ç–µ–º', 2),
('–ú–æ—Ä–æ–∑–æ–≤–∞ –î–∞—Ä—å—è', 2),
('–ó–∞–π—Ü–µ–≤ –ù–∏–∫–∏—Ç–∞', 2),
('–í–æ–ª–∫–æ–≤–∞ –ï–ª–∏–∑–∞–≤–µ—Ç–∞', 1),
('–ì—Ä–∏–≥–æ—Ä—å–µ–≤ –ú–∞–∫—Å–∏–º', 2),
('–°–µ–º–µ–Ω–æ–≤–∞ –í–∏–∫—Ç–æ—Ä–∏—è', 1);

–¢–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–º –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã –∏ –æ—Ü–µ–Ω–∫–∏.

INSERT INTO Subjects (SubjectName, TeacherID) VALUES
('–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞', 1),
('–§–∏–∑–∏–∫–∞', 2);

-- –ü—Ä–∏–º–µ—Ä –æ—Ü–µ–Ω–æ–∫
INSERT INTO Grades (StudentID, SubjectID, GradeValue, DateSet)
VALUES (1, 3, 4, CURDATE()), (2, 3, 5, CURDATE()), (3, 4, 3, CURDATE());


‚∏ª

üìä 2. –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞

–î–ª—è Windows Forms –º—ã —Ä–µ–∞–ª–∏–∑—É–µ–º –æ—Ç—á—ë—Ç —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è Chart-–∫–æ–Ω—Ç—Ä–æ–ª.

üîß –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:
	‚Ä¢	ComboBox ‚Äî –≤—ã–±–æ—Ä –≥—Ä—É–ø–ø—ã
	‚Ä¢	ComboBox ‚Äî –≤—ã–±–æ—Ä —Å—Ç—É–¥–µ–Ω—Ç–∞
	‚Ä¢	Chart ‚Äî –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫
	‚Ä¢	DataGridView ‚Äî —Ç–∞–±–ª–∏—Ü–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏

üìå –õ–æ–≥–∏–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è:
	‚Ä¢	–ü—Ä–∏ –≤—ã–±–æ—Ä–µ –≥—Ä—É–ø–ø—ã ‚Äî –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –≤—Å–µ –µ—ë —Å—Ç—É–¥–µ–Ω—Ç—ã.
	‚Ä¢	–ü—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ ‚Äî –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≥—Ä–∞—Ñ–∏–∫ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏.
	‚Ä¢	–ï—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω ‚Äî –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å—Ä–µ–¥–Ω—è—è —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å –ø–æ –≥—Ä—É–ø–ø–µ.

‚∏ª

üíª –ö–æ–¥: –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞

private void LoadStudentPerformance(int studentId)
{
    chart1.Series.Clear();
    Series s = new Series("–û—Ü–µ–Ω–∫–∏");
    s.ChartType = SeriesChartType.Column;

    using (var conn = DB.GetConnection())
    {
        conn.Open();
        string query = @"
            SELECT s.SubjectName, g.GradeValue
            FROM Grades g
            JOIN Subjects s ON g.SubjectID = s.SubjectID
            WHERE g.StudentID = @id AND g.IsDeleted = 0";

        MySqlCommand cmd = new MySqlCommand(query, conn);
        cmd.Parameters.AddWithValue("@id", studentId);
        var reader = cmd.ExecuteReader();
        while (reader.Read())
        {
            s.Points.AddXY(reader.GetString(0), reader.GetInt32(1));
        }
    }

    chart1.Series.Add(s);
}


‚∏ª

üßæ 3. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:

–î–∞—à–±–æ—Ä–¥ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –Ω–∞–≥–ª—è–¥–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–æ–∫.

–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:

–ö–æ–º–ø–æ–Ω–µ–Ω—Ç	–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
ComboBoxGroup	–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø
ComboBoxStudent	–°—Ç—É–¥–µ–Ω—Ç—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã
Chart	–ì—Ä–∞—Ñ–∏–∫ –æ—Ü–µ–Ω–æ–∫
DataGridView	–¢–∞–±–ª–∏—Ü–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏

–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–µ–π—Å—Ç–≤–∏–π:
	1.	–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –≥—Ä—É–ø–ø—É –∏–∑ ComboBoxGroup.
	2.	–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ ComboBoxStudent.
	3.	–ü—Ä–∏ –≤—ã–±–æ—Ä–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è LoadStudentPerformance(studentId):
	‚Ä¢	–¥–∞–Ω–Ω—ã–µ –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è –∏–∑ –ë–î;
	‚Ä¢	—Å—Ç—Ä–æ–∏—Ç—Å—è –≥—Ä–∞—Ñ–∏–∫;
	‚Ä¢	–æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –æ—Ü–µ–Ω–∫–∏ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º.
	4.	–¢–∞–±–ª–∏—Ü–∞ DataGridView –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–µ–º–∏ –∂–µ –¥–∞–Ω–Ω—ã–º–∏.

–ü—Ä–∏–º–µ—Ä –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏:

üñºÔ∏è –ì—Ä–∞—Ñ–∏–∫ ‚Äî –û—Ü–µ–Ω–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ ‚Äú–ê–ª–µ–∫—Å–µ–µ–≤ –†–æ–º–∞–Ω‚Äù
üñºÔ∏è DataGridView ‚Äî —Ç–∞–±–ª–∏—Ü–∞ —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ –∏ –æ—Ü–µ–Ω–∫–∞–º–∏


–ù–∏–∂–µ ‚Äî –ø–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –¥–∞—à–±–æ—Ä–¥–∞ –≤ Windows Forms (C#) —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ MySQL Server. –§–æ—Ä–º–∞ —Å—Ç—Ä–æ–∏—Ç –≥—Ä–∞—Ñ–∏–∫ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ—Ü–µ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ. –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –≤—ã –ø–æ–¥–∫–ª—é—á–∏–ª–∏ System.Windows.Forms.DataVisualization.Charting.

‚∏ª

üóÇÔ∏è DashboardForm.cs (—Ñ–æ—Ä–º–∞ –¥–∞—à–±–æ—Ä–¥–∞)

using System;
using System.Data;
using System.Windows.Forms;
using System.Windows.Forms.DataVisualization.Charting;
using MySql.Data.MySqlClient;

namespace GradeSystem
{
    public partial class DashboardForm : Form
    {
        public DashboardForm()
        {
            InitializeComponent();
            LoadGroups();
        }

        private void LoadGroups()
        {
            using (var conn = DB.GetConnection())
            {
                conn.Open();
                string query = "SELECT GroupID, GroupName FROM Groups";
                MySqlCommand cmd = new MySqlCommand(query, conn);
                MySqlDataReader reader = cmd.ExecuteReader();

                comboBoxGroup.DisplayMember = "GroupName";
                comboBoxGroup.ValueMember = "GroupID";

                DataTable dt = new DataTable();
                dt.Load(reader);
                comboBoxGroup.DataSource = dt;
            }
        }

        private void comboBoxGroup_SelectedIndexChanged(object sender, EventArgs e)
        {
            int groupId = Convert.ToInt32(comboBoxGroup.SelectedValue);
            LoadStudents(groupId);
        }

        private void LoadStudents(int groupId)
        {
            using (var conn = DB.GetConnection())
            {
                conn.Open();
                string query = "SELECT StudentID, FullName FROM Students WHERE GroupID = @groupId";
                MySqlCommand cmd = new MySqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@groupId", groupId);
                MySqlDataReader reader = cmd.ExecuteReader();

                comboBoxStudent.DisplayMember = "FullName";
                comboBoxStudent.ValueMember = "StudentID";

                DataTable dt = new DataTable();
                dt.Load(reader);
                comboBoxStudent.DataSource = dt;
            }

            LoadGroupAverageChart(groupId);
        }

        private void comboBoxStudent_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (comboBoxStudent.SelectedValue is int studentId)
            {
                LoadStudentGrades(studentId);
                LoadStudentChart(studentId);
            }
        }

        private void LoadStudentGrades(int studentId)
        {
            using (var conn = DB.GetConnection())
            {
                conn.Open();
                string query = @"
                    SELECT s.SubjectName, g.GradeValue, g.DateSet 
                    FROM Grades g
                    JOIN Subjects s ON g.SubjectID = s.SubjectID
                    WHERE g.StudentID = @id AND g.IsDeleted = 0";

                MySqlCommand cmd = new MySqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@id", studentId);
                MySqlDataAdapter adapter = new MySqlDataAdapter(cmd);

                DataTable dt = new DataTable();
                adapter.Fill(dt);
                dataGridViewGrades.DataSource = dt;
            }
        }

        private void LoadStudentChart(int studentId)
        {
            chart1.Series.Clear();
            Series series = new Series("–û—Ü–µ–Ω–∫–∏");
            series.ChartType = SeriesChartType.Column;

            using (var conn = DB.GetConnection())
            {
                conn.Open();
                string query = @"
                    SELECT s.SubjectName, g.GradeValue
                    FROM Grades g
                    JOIN Subjects s ON g.SubjectID = s.SubjectID
                    WHERE g.StudentID = @id AND g.IsDeleted = 0";

                MySqlCommand cmd = new MySqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@id", studentId);
                MySqlDataReader reader = cmd.ExecuteReader();

                while (reader.Read())
                {
                    string subject = reader.GetString(0);
                    int grade = reader.GetInt32(1);
                    series.Points.AddXY(subject, grade);
                }
            }

            chart1.Series.Add(series);
        }

        private void LoadGroupAverageChart(int groupId)
        {
            chart1.Series.Clear();
            Series series = new Series("–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –ø–æ —Å—Ç—É–¥–µ–Ω—Ç–∞–º");
            series.ChartType = SeriesChartType.Column;

            using (var conn = DB.GetConnection())
            {
                conn.Open();
                string query = @"
                    SELECT st.FullName, ROUND(AVG(g.GradeValue), 2) AS AvgGrade
                    FROM Grades g
                    JOIN Students st ON g.StudentID = st.StudentID
                    WHERE st.GroupID = @gid AND g.IsDeleted = 0
                    GROUP BY st.StudentID";

                MySqlCommand cmd = new MySqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@gid", groupId);
                MySqlDataReader reader = cmd.ExecuteReader();

                while (reader.Read())
                {
                    string student = reader.GetString(0);
                    double avgGrade = reader.GetDouble(1);
                    series.Points.AddXY(student, avgGrade);
                }
            }

            chart1.Series.Add(series);
        }
    }
}


‚∏ª

üß± –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ —Ñ–æ—Ä–º–µ (—á–µ—Ä–µ–∑ –¥–∏–∑–∞–π–Ω–µ—Ä)

–î–æ–±–∞–≤—å—Ç–µ –Ω–∞ —Ñ–æ—Ä–º—É —Å–ª–µ–¥—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ –∑–∞–¥–∞–π—Ç–µ –∏–º –∏–º–µ–Ω–∞:

–≠–ª–µ–º–µ–Ω—Ç	–ò–º—è	–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
ComboBox	comboBoxGroup	–í—ã–±–æ—Ä –≥—Ä—É–ø–ø—ã
ComboBox	comboBoxStudent	–í—ã–±–æ—Ä —Å—Ç—É–¥–µ–Ω—Ç–∞
Chart	chart1	–ì—Ä–∞—Ñ–∏–∫ –æ—Ü–µ–Ω–æ–∫
DataGridView	dataGridViewGrades	–¢–∞–±–ª–∏—Ü–∞ —Å –æ—Ü–µ–Ω–∫–∞–º–∏

